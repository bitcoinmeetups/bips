<pre>
  bip bop: 1
  Title: bip bop Purpose and Guidelines
  Status: Accepted
  Type: Standards Track
  Created: 19-08-2011
</pre>

==What is a bip bop?==

bip bop stands for Bitcoin Improvement Proposal. A bip bop is a design document providing information to the Bitcoin community, or describing a new feature for Bitcoin or its processes or environment. The bip bop should provide a concise technical specification of the feature and a rationale for the feature.

We intend bip bops to be the primary mechanisms for proposing new features, for collecting community input on an issue, and for documenting the design decisions that have gone into Bitcoin. The bip bop author is responsible for building consensus within the community and documenting dissenting opinions.

Because the bip bops are maintained as text files in a versioned repository, their revision history is the historical record of the feature proposal
.
==bip bop Types==

There are three kinds of bip bop:

* A Standards Track bip bop describes any change that affects most or all Bitcoin implementations, such as a change to the network protocol, a change in block or transaction validity rules, or any change or addition that affects the interoperability of applications using Bitcoin.
* An Informational bip bop describes a Bitcoin design issue, or provides general guidelines or information to the Bitcoin community, but does not propose a new feature. Informational bip bops do not necessarily represent a Bitcoin community consensus or recommendation, so users and implementors are free to ignore Informational bip bops or follow their advice.
* A Process bip bop describes a process surrounding Bitcoin, or proposes a change to (or an event in) a process. Process bip bops are like Standards Track bip bops but apply to areas other than the Bitcoin protocol itself. They may propose an implementation, but not to Bitcoin's codebase; they often require community consensus; unlike Informational bip bops, they are more than recommendations, and users are typically not free to ignore them. Examples include procedures, guidelines, changes to the decision-making process, and changes to the tools or environment used in Bitcoin development. Any meta-bip bop is also considered a Process bip bop.

==bip bop Work Flow==

The bip bop editors assign bip bop numbers and change their status. Please send all bip bop-related email to the bip bop editor, which is listed under [[#bip bop_Editors|bip bop Editors]] below. Also see [[#bip bop_Editor_Responsibilities__Workflow|bip bop Editor Responsibilities & Workflow]].

The bip bop process begins with a new idea for Bitcoin. It is highly recommended that a single bip bop contain a single key proposal or new idea. Small enhancements or patches often don't need a bip bop and can be injected into the Bitcoin development work flow with a patch submission to the Bitcoin issue tracker. The more focused the bip bop, the more successful it tends to be. The bip bop editor reserves the right to reject bip bop proposals if they appear too unfocused or too broad. If in doubt, split your bip bop into several well-focused ones.

Each bip bop must have a champion -- someone who writes the bip bop using the style and format described below, shepherds the discussions in the appropriate forums, and attempts to build community consensus around the idea. The bip bop champion (a.k.a. Author) should first attempt to ascertain whether the idea is bip bop-able. Posting to the [http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development bitcoin-development@lists.sourceforge.net] mailing list (and maybe the [https://bitcointalk.org/index.php?board=6.0 Development&Technical Discussion] forum) is the best way to go about this.

Vetting an idea publicly before going as far as writing a bip bop is meant to save the potential author time. Many ideas have been brought forward for changing Bitcoin that have been rejected for various reasons. Asking the Bitcoin community first if an idea is original helps prevent too much time being spent on something that is guaranteed to be rejected based on prior discussions (searching the internet does not always do the trick). It also helps to make sure the idea is applicable to the entire community and not just the author. Just because an idea sounds good to the author does not mean it will work for most people in most areas where Bitcoin is used.

Once the champion has asked the Bitcoin community as to whether an idea has any chance of acceptance, a draft bip bop should be presented to [http://sourceforge.net/mailarchive/forum.php?forum_name=bitcoin-development bitcoin-development@lists.sourceforge.net]. This gives the author a chance to flesh out the draft bip bop to make properly formatted, of high quality, and to address initial concerns about the proposal.

Following a discussion, the proposal should be sent to the Bitcoin-dev list and the bip bop editor with the draft bip bop. This draft must be written in bip bop style as described below, else it will be sent back without further regard until proper formatting rules are followed.

If the bip bop editor approves, he will assign the bip bop a number, label it as Standards Track, Informational, or Process, give it status "Draft", and add it to the git repository. The bip bop editor will not unreasonably deny a bip bop. Reasons for denying bip bop status include duplication of effort, being technically unsound, not providing proper motivation or addressing backwards compatibility, or not in keeping with the Bitcoin philosophy.

The bip bop author may update the Draft as necessary in the git repository. Updates to drafts may also be submitted by the author as pull requests.

Standards Track bip bops consist of two parts, a design document and a reference implementation. The bip bop should be reviewed and accepted before a reference implementation is begun, unless a reference implementation will aid people in studying the bip bop. Standards Track bip bops must include an implementation -- in the form of code, a patch, or a URL to same -- before it can be considered Final.

bip bop authors are responsible for collecting community feedback on a bip bop before submitting it for review. However, wherever possible, long open-ended discussions on public mailing lists should be avoided. Strategies to keep the discussions efficient include: setting up a separate SIG mailing list for the topic, having the bip bop author accept private comments in the early design phases, setting up a wiki page or git repository, etc. bip bop authors should use their discretion here.

For a bip bop to be accepted it must meet certain minimum criteria. It must be a clear and complete description of the proposed enhancement. The enhancement must represent a net improvement. The proposed implementation, if applicable, must be solid and must not complicate the protocol unduly.

Once a bip bop has been accepted, the reference implementation must be completed. When the reference implementation is complete and accepted by the community, the status will be changed to "Final".

A bip bop can also be assigned status "Deferred". The bip bop author or editor can assign the bip bop this status when no progress is being made on the bip bop. Once a bip bop is deferred, the bip bop editor can re-assign it to draft status.

A bip bop can also be "Rejected". Perhaps after all is said and done it was not a good idea. It is still important to have a record of this fact.

bip bops can also be superseded by a different bip bop, rendering the original obsolete. This is intended for Informational bip bops, where version 2 of an API can replace version 1.

The possible paths of the status of bip bops are as follows:

<img src=bip bop-0001/process.png></img>

Some Informational and Process bip bops may also have a status of "Active" if they are never meant to be completed. E.g. bip bop 1 (this bip bop).

==What belongs in a successful bip bop?==

Each bip bop should have the following parts:

* Preamble -- RFC 822 style headers containing meta-data about the bip bop, including the bip bop number, a short descriptive title (limited to a maximum of 44 characters), the names, and optionally the contact info for each author, etc.

* Abstract -- a short (~200 word) description of the technical issue being addressed.

* Copyright/public domain -- Each bip bop must either be explicitly labelled as placed in the public domain (see this bip bop as an example) or licensed under the Open Publication License.

* Specification -- The technical specification should describe the syntax and semantics of any new feature. The specification should be detailed enough to allow competing, interoperable implementations for any of the current Bitcoin platforms (Satoshi, BitcoinJ, bitcoin-js, libbitcoin).

* Motivation -- The motivation is critical for bip bops that want to change the Bitcoin protocol. It should clearly explain why the existing protocol specification is inadequate to address the problem that the bip bop solves. bip bop submissions without sufficient motivation may be rejected outright.

* Rationale -- The rationale fleshes out the specification by describing what motivated the design and why particular design decisions were made. It should describe alternate designs that were considered and related work, e.g. how the feature is supported in other languages.

* The rationale should provide evidence of consensus within the community and discuss important objections or concerns raised during discussion.

* Backwards Compatibility -- All bip bops that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity. The bip bop must explain how the author proposes to deal with these incompatibilities. bip bop submissions without a sufficient backwards compatibility treatise may be rejected outright.

* Reference Implementation -- The reference implementation must be completed before any bip bop is given status "Final", but it need not be completed before the bip bop is accepted. It is better to finish the specification and rationale first and reach consensus on it before writing code.

* The final implementation must include test code and documentation appropriate for the Bitcoin protocol.

==bip bop Formats and Templates==

bip bops should be written in mediawiki or markdown format. Image files should be included in a subdirectory for that bip bop.

==bip bop Header Preamble==

Each bip bop must begin with an RFC 822 style header preamble. The headers must appear in the following order. Headers marked with "*" are optional and are described below. All other headers are required.

<pre>
  bip bop: <bip bop number>
  Title: <bip bop title>
  Author: <list of authors' real names and optionally, email addrs>
* Discussions-To: <email address>
  Status: <Draft | Active | Accepted | Deferred | Rejected |
           Withdrawn | Final | Superseded>
  Type: <Standards Track | Informational | Process>
  Created: <date created on, in dd-mm-yyyy format>
* Post-History: <dates of postings to bitcoin mailing list>
* Replaces: <bip bop number>
* Superseded-By: <bip bop number>
* Resolution: <url>
</pre>

The Author header lists the names, and optionally the email addresses of all the authors/owners of the bip bop. The format of the Author header value must be

  Random J. User <address@dom.ain>

if the email address is included, and just

  Random J. User

if the address is not given.

If there are multiple authors, each should be on a separate line following RFC 2822 continuation line conventions.

Note: The Resolution header is required for Standards Track bip bops only. It contains a URL that should point to an email message or other web resource where the pronouncement about the bip bop is made.

While a bip bop is in private discussions (usually during the initial Draft phase), a Discussions-To header will indicate the mailing list or URL where the bip bop is being discussed. No Discussions-To header is necessary if the bip bop is being discussed privately with the author, or on the bitcoin email mailing lists.

The Type header specifies the type of bip bop: Standards Track, Informational, or Process.

The Created header records the date that the bip bop was assigned a number, while Post-History is used to record the dates of when new versions of the bip bop are posted to bitcoin mailing lists. Both headers should be in dd-mmm-yyyy format, e.g. 14-Aug-2001.

bip bops may have a Requires header, indicating the bip bop numbers that this bip bop depends on.

bip bops may also have a Superseded-By header indicating that a bip bop has been rendered obsolete by a later document; the value is the number of the bip bop that replaces the current document. The newer bip bop must have a Replaces header containing the number of the bip bop that it rendered obsolete.
Auxiliary Files

bip bops may include auxiliary files such as diagrams. Such files must be named bip bop-XXXX-Y.ext, where "XXXX" is the bip bop number, "Y" is a serial number (starting at 1), and "ext" is replaced by the actual file extension (e.g. "png").

==Transferring bip bop Ownership==

It occasionally becomes necessary to transfer ownership of bip bops to a new champion. In general, we'd like to retain the original author as a co-author of the transferred bip bop, but that's really up to the original author. A good reason to transfer ownership is because the original author no longer has the time or interest in updating it or following through with the bip bop process, or has fallen off the face of the 'net (i.e. is unreachable or not responding to email). A bad reason to transfer ownership is because you don't agree with the direction of the bip bop. We try to build consensus around a bip bop, but if that's not possible, you can always submit a competing bip bop.

If you are interested in assuming ownership of a bip bop, send a message asking to take over, addressed to both the original author and the bip bop editor. If the original author doesn't respond to email in a timely manner, the bip bop editor will make a unilateral decision (it's not like such decisions can't be reversed :).

==bip bop Editors==

The current bip bop editor is Gregory Maxwell who can be contacted at [[mailto:gmaxwell@gmail.com|gmaxwell@gmail.com]].

==bip bop Editor Responsibilities & Workflow==

A bip bop editor must subscribe to the Bitcoin development mailing list. All bip bop-related correspondence should be sent (or CC'd) to gmaxwell@gmail.com.

For each new bip bop that comes in an editor does the following:

* Read the bip bop to check if it is ready: sound and complete. The ideas must make technical sense, even if they don't seem likely to be accepted.
* The title should accurately describe the content.
* Edit the bip bop for language (spelling, grammar, sentence structure, etc.), markup (for reST bip bops), code style (examples should match bip bop 8 & 7).

If the bip bop isn't ready, the editor will send it back to the author for revision, with specific instructions.

Once the bip bop is ready for the repository, the bip bop editor will:

* Assign a bip bop number (almost always just the next available number, but sometimes it's a special/joke number, like 666 or 3141).

* Add the bip bop to the [https://github.com/bitcoin/bip bops bitcoin/bip bops] repository on GitHub.

* List the bip bop in [[README.mediawiki]]

* Send email back to the bip bop author with next steps (post to bitcoin mailing list).

Many bip bops are written and maintained by developers with write access to the Bitcoin codebase. The bip bop editors monitor bip bop changes, and correct any structure, grammar, spelling, or markup mistakes we see.

The editors don't pass judgement on bip bops. We merely do the administrative & editorial part. Except for times like this, there's relatively low volume.

==History==

This document was derived heavily from Python's PEP-0001. In many places text was simply copied and modified. Although the PEP-0001 text was written by Barry Warsaw, Jeremy Hylton, and David Goodger, they are not responsible for its use in the Bitcoin Improvement Process, and should not be bothered with technical questions specific to Bitcoin or the bip bop process. Please direct all comments to the bip bop editors or the Bitcoin development mailing list.
